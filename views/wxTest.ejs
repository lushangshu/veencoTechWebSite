<head>
    <meta charset="utf-8"/>
    <title>微信js-sdk测试</title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta content="width=device-width, initial-scale=1" name="viewport"/>
    <meta content="" name="description"/>
    <meta content="" name="author"/>

    <script src="http://cdn.bootcss.com/jquery/2.1.4/jquery.min.js"></script>
    <script src="http://res.wx.qq.com/open/js/jweixin-1.0.0.js"></script>
</head>
<body>
    <h2>test test test</h2>
      <p id='paragraph'>
        this is config data
      </p>
      <div>
        <button id="scan">扫描二维码</button>
        <button id="chooseImage">选择图片</button>
      </div>

  </body>
</html>

<script>
$("#scan").click(function(){
  alert('click scan button');
  document.getElementById('paragraph').innerHTML  = 'returned data is';
  wx.scanQRCode({
        needResult: 1, // 默认为0，扫描结果由微信处理，1则直接返回扫描结果，
        scanType: ["qrCode","barCode"], // 可以指定扫二维码还是一维码，默认二者都有
        success: function (res) {
          alert('scan la ');
          var result = res.resultStr; // 当needResult 为 1 时，扫码返回的结果
        },
        fail:function(res){
          alert('scan fail '+res);
        }
    });
});

$("#chooseImage").click(function(){
  wx.chooseImage({
    count: 1, // 默认9
    sizeType: ['original', 'compressed'], // 可以指定是原图还是压缩图，默认二者都有
    sourceType: ['album', 'camera'], // 可以指定来源是相册还是相机，默认二者都有
    success: function (res) {
        var localIds = res.localIds; // 返回选定照片的本地ID列表，localId可以作为img标签的src属性显示图片
    }
});
});
</script>

<script>
    $(function(){
        //获取jsconfig
        var param_get_js_config = {'cmd':'get_js_config','url':window.location.href.split('#')[0]};
        hander_data_from_wechat_api(param_get_js_config,hander_js_config);

    });

    //配置JSconfig
    function hander_js_config(data){

        //alert('debug is '+data.debug+' appId is '+data.appId+' timestamp is '+data.timestamp+' noncestr is '+data.nonceStr+' signature is  '+data.signature+' ');
        wx.config(data);
        wx.ready(function(){
          //alert(' ready ahahaha');
            // config信息验证后会执行ready方法，所有接口调用都必须在config接口获得结果之后，config是一个客户端的异步操作，所以如果需要在页面加载时就调用相关接口，则须把相关接口放在ready函数中调用来确保正确执行。对于用户触发时才调用的接口，则可以直接调用，不需要放在ready函数中。
            wx.checkJsApi({
                jsApiList: ['onMenuShareTimeline','scanQRCode'], // 需要检测的JS接口列表，所有JS接口列表见附录2,
                success: function(res) {
                    alert('check succeed '+ JSON.stringify(res));

                    // 以键值对的形式返回，可用的api值true，不可用为false
                    // 如：{"checkResult":{"chooseImage":true},"errMsg":"checkJsApi:ok"}
                }
            });
            wx.onMenuShareAppMessage({
                title: '分享给朋友标题', // 分享标题
                desc: '分享给朋友描述', // 分享描述
                link: window.location.href.split('#')[0], // 分享链接
                imgUrl: '', // 分享图标
                type: 'link', // 分享类型,music、video或link，不填默认为link
                //dataUrl: '', // 如果type是music或video，则要提供数据链接，默认为空
                success: function () {
                    // 用户确认分享后执行的回调函数
                    alert("分享给朋友成功");
                },
                cancel: function () {
                    // 用户取消分享后执行的回调函数
                    alert("分享给朋友失败");
                }
            });
        });
        wx.error(function(res){
            //alert('ahahaha');
            alert('Error with info: '+JSON.stringify(res));
            // config信息验证失败会执行error函数，如签名过期导致验证失败，具体错误信息可以打开config的debug模式查看，也可以在返回的res参数中查看，对于SPA可以在这里更新签名。
        });
    };
    //传递参数请求wechat_api数据，请求成功后的回调函数fn处理得到的数据
    function hander_data_from_wechat_api(param,fn) {
        $.ajax({
            url: window.location.href.split('#')[0],
            //url:encodeURIComponent(window.location.href.split('?')[0]),
            type: 'POST',
            data: param,
            datatype: 'json',
            success: function (data) {
                fn(data);
            },
            fail:function(error){
              alert(error);
            }
        })
    };
    // wx.config({
    //     debug: true, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。
    //     appId: '', // 必填，公众号的唯一标识
    //     timestamp: , // 必填，生成签名的时间戳
    //     nonceStr: '', // 必填，生成签名的随机串
    //     signature: 'sM4AOVdWfPE4DxkXGEs8VJAAX0hDsNvepedYVgPudpde87_OEkUJdX4mFJAutu8m3l0Zg2FbxavtkibLqYZHcw',// 必填，签名，见附录1
    //     jsApiList: [] // 必填，需要使用的JS接口列表，所有JS接口列表见附录2
    // });
</script>
